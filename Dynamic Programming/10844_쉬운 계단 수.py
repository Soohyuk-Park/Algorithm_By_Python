# https://www.acmicpc.net/problem/10844
# dp의 전형적인 문제
# 마지막 숫자가 N일때 앞의 숫자가 뭐가 되어야 할까? 를 고민하면 된다
# 예를들어, 5자리 숫자인데 마지막 수가 9인 계단수이면 마지막 수 빼면 4자리+마지막8인 계단수
# dp라는 리스트를 통해서 행을 하나의 층으로 생각했다.
# 0층에는 1자리 자연수일때의 계단수들
# 1층에는 2자리~ 이렇게 해서 n-1층에는 n자리 자연수이면서 마지막 자리수별 계단수의 개수 출력
# 문제 조건도 잘 읽어야한다. 마지막에 1e9로 나눈 나머지인데 안해서 한 번 틀림

n = int(input())

dp = [ [0] * 10 for _ in range(n)]

dp[0] = [0,1,1,1,1,1,1,1,1,1]
#dp[1] = [1,1,2,2,2,2,2,2,2,1]

for i in range(1, n):
    dp[i][0] = dp[i-1][1]
    dp[i][9] = dp[i-1][8]
    for j in range(1,9):
      dp[i][j] = dp[i-1][j-1] + dp[i-1][j+1]

print(sum(dp[n-1]) % 1000000000)
